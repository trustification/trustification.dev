apiVersion: apps/v1
kind: Deployment
metadata:
  name: bombastic-indexer
  labels:
    app.kubernetes.io/name: bombastic-indexer
    app.kubernetes.io/component: indexer
    app.kubernetes.io/part-of: bombastic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bombastic-indexer
      app.kubernetes.io/component: indexer
      app.kubernetes.io/part-of: bombastic
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bombastic-indexer
        app.kubernetes.io/component: indexer
        app.kubernetes.io/part-of: bombastic
    spec:
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - image: ghcr.io/trustification/trust:{{ .Values.release }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: service
          command: ["/trust"]
          args: ["bombastic", "indexer", "--event-bus", "sqs", "--stored-topic", "{{ .Values.bombastic.storedTopic }}", "--indexed-topic", "{{ .Values.bombastic.indexedTopic }}", "--failed-topic", "{{ .Values.bombastic.failedTopic }}", "--index-dir", "/data/index", "--storage-bucket", "{{ .Values.bombastic.bucket }}"]
          env:
            - name: RUST_LOG
              value: info
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.bombastic.credentials }}"
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.bombastic.credentials }}"
                  key: secret-access-key
            - name: REGION
              value: "{{ .Values.region }}"
            - name: INFRASTRUCTURE_ENABLED
              value: "true"
            - name: INFRASTRUCTURE_BIND
              value: "[::]:9010"
          volumeMounts:
            - name: data
              mountPath: /data
          ports:
            - containerPort: 9010
              protocol: TCP
              name: infra
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9010
            initialDelaySeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9010
            initialDelaySeconds: 2
          startupProbe:
            httpGet:
              path: /health/startup
              port: 9010
